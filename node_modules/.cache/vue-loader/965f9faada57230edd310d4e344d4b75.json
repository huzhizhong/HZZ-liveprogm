{"remainingRequest":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/vue-video-player/src/player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/vue-video-player/src/player.vue","mtime":1517471630000},{"path":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hu/Documents/github_demo/HZZ-liveprogm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCi8vIGxpYgppbXBvcnQgX3ZpZGVvanMgZnJvbSAndmlkZW8uanMnCmNvbnN0IHZpZGVvanMgPSB3aW5kb3cudmlkZW9qcyB8fCBfdmlkZW9qcwoKLy8gcG9sbGZpbGwKaWYgKHR5cGVvZiBPYmplY3QuYXNzaWduICE9ICdmdW5jdGlvbicpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT2JqZWN0LCAnYXNzaWduJywgewogICAgdmFsdWUodGFyZ2V0LCB2YXJBcmdzKSB7CiAgICAgIGlmICh0YXJnZXQgPT0gbnVsbCkgewogICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCcpCiAgICAgIH0KICAgICAgY29uc3QgdG8gPSBPYmplY3QodGFyZ2V0KQogICAgICBmb3IgKGxldCBpbmRleCA9IDE7IGluZGV4IDwgYXJndW1lbnRzLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgIGNvbnN0IG5leHRTb3VyY2UgPSBhcmd1bWVudHNbaW5kZXhdCiAgICAgICAgaWYgKG5leHRTb3VyY2UgIT0gbnVsbCkgewogICAgICAgICAgZm9yIChjb25zdCBuZXh0S2V5IGluIG5leHRTb3VyY2UpIHsKICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuZXh0U291cmNlLCBuZXh0S2V5KSkgewogICAgICAgICAgICAgIHRvW25leHRLZXldID0gbmV4dFNvdXJjZVtuZXh0S2V5XQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiB0bwogICAgfSwKICAgIHdyaXRhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlCiAgfSkKfQoKLy8gYXMgb2YgdmlkZW9qcyA2LjYuMApjb25zdCBERUZBVUxUX0VWRU5UUyA9IFsKICAnbG9hZGVkZGF0YScsCiAgJ2NhbnBsYXknLAogICdjYW5wbGF5dGhyb3VnaCcsCiAgJ3BsYXknLAogICdwYXVzZScsCiAgJ3dhaXRpbmcnLAogICdwbGF5aW5nJywKICAnZW5kZWQnLAogICdlcnJvcicKXQoKLy8gZXhwb3J0CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndmlkZW8tcGxheWVyJywKICBwcm9wczogewogICAgc3RhcnQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgY3Jvc3NPcmlnaW46IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHBsYXlzaW5saW5lOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgY3VzdG9tRXZlbnROYW1lOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3N0YXRlY2hhbmdlZCcKICAgIH0sCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBldmVudHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgZ2xvYmFsT3B0aW9uczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgLy8gYXV0b3BsYXk6IGZhbHNlLAogICAgICAgIGNvbnRyb2xzOiB0cnVlLAogICAgICAgIC8vIHByZWxvYWQ6ICdhdXRvJywKICAgICAgICAvLyBmbHVpZDogZmFsc2UsCiAgICAgICAgLy8gbXV0ZWQ6IGZhbHNlLAogICAgICAgIGNvbnRyb2xCYXI6IHsKICAgICAgICAgIHJlbWFpbmluZ1RpbWVEaXNwbGF5OiBmYWxzZSwKICAgICAgICAgIHBsYXlUb2dnbGU6IHt9LAogICAgICAgICAgcHJvZ3Jlc3NDb250cm9sOiB7fSwKICAgICAgICAgIGZ1bGxzY3JlZW5Ub2dnbGU6IHt9LAogICAgICAgICAgdm9sdW1lTWVudUJ1dHRvbjogewogICAgICAgICAgICBpbmxpbmU6IGZhbHNlLAogICAgICAgICAgICB2ZXJ0aWNhbDogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdGVjaE9yZGVyOiBbJ2h0bWw1J10sCiAgICAgICAgcGx1Z2luczoge30KICAgICAgfSkKICAgIH0sCiAgICBnbG9iYWxFdmVudHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxheWVyOiBudWxsLAogICAgICByZXNldGVkOiB0cnVlCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKCF0aGlzLnBsYXllcikgeyAKICAgICAgdGhpcy5pbml0aWFsaXplKCkKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAodGhpcy5wbGF5ZXIpIHsgCiAgICAgIHRoaXMuZGlzcG9zZSgpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWFsaXplKCkgewoKICAgICAgLy8gdmlkZW9qcyBvcHRpb25zCiAgICAgIGNvbnN0IHZpZGVvT3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZ2xvYmFsT3B0aW9ucywgdGhpcy5vcHRpb25zKQoKICAgICAgLy8gaW9zIGZ1bGxzY3JlZW4KICAgICAgaWYgKHRoaXMucGxheXNpbmxpbmUpIHsKICAgICAgICB0aGlzLiRyZWZzLnZpZGVvLnNldEF0dHJpYnV0ZSgncGxheXNpbmxpbmUnLCB0aGlzLnBsYXlzaW5saW5lKQogICAgICAgIHRoaXMuJHJlZnMudmlkZW8uc2V0QXR0cmlidXRlKCd3ZWJraXQtcGxheXNpbmxpbmUnLCB0aGlzLnBsYXlzaW5saW5lKQogICAgICAgIHRoaXMuJHJlZnMudmlkZW8uc2V0QXR0cmlidXRlKCd4NS1wbGF5c2lubGluZScsIHRoaXMucGxheXNpbmxpbmUpCiAgICAgICAgdGhpcy4kcmVmcy52aWRlby5zZXRBdHRyaWJ1dGUoJ3g1LXZpZGVvLXBsYXllci10eXBlJywgJ2g1JykKICAgICAgICB0aGlzLiRyZWZzLnZpZGVvLnNldEF0dHJpYnV0ZSgneDUtdmlkZW8tcGxheWVyLWZ1bGxzY3JlZW4nLCBmYWxzZSkKICAgICAgfQoKICAgICAgLy8gY3Jvc3Mgb3JpZ2luCiAgICAgIGlmICh0aGlzLmNyb3NzT3JpZ2luICE9PSAnJykgewogICAgICAgIHRoaXMuJHJlZnMudmlkZW8uY3Jvc3NPcmlnaW4gPSB0aGlzLmNyb3NzT3JpZ2luCiAgICAgICAgdGhpcy4kcmVmcy52aWRlby5zZXRBdHRyaWJ1dGUoJ2Nyb3NzT3JpZ2luJywgdGhpcy5jcm9zc09yaWdpbikKICAgICAgfQoKICAgICAgLy8gZW1pdCBldmVudAogICAgICBjb25zdCBlbWl0UGxheWVyU3RhdGUgPSAoZXZlbnQsIHZhbHVlKSA9PiB7CiAgICAgICAgaWYgKGV2ZW50KSB7CiAgICAgICAgICB0aGlzLiRlbWl0KGV2ZW50LCB0aGlzLnBsYXllcikKICAgICAgICB9CiAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICB0aGlzLiRlbWl0KHRoaXMuY3VzdG9tRXZlbnROYW1lLCB7IFtldmVudF06IHZhbHVlIH0pCiAgICAgICAgfQogICAgICB9CgogICAgICAvLyBhdm9pZCBlcnJvciAiVklERU9KUzogRVJST1I6IFVuYWJsZSB0byBmaW5kIHBsdWdpbjogX19vYl9fIgogICAgICBpZiAodmlkZW9PcHRpb25zLnBsdWdpbnMpIHsKICAgICAgICBkZWxldGUgdmlkZW9PcHRpb25zLnBsdWdpbnMuX19vYl9fCiAgICAgIH0KCiAgICAgIC8vIHZpZGVvT3B0aW9ucwogICAgICAvLyBjb25zb2xlLmxvZygndmlkZW9PcHRpb25zJywgdmlkZW9PcHRpb25zKQogICAgICAKICAgICAgLy8gcGxheWVyCiAgICAgIGNvbnN0IHNlbGYgPSB0aGlzCiAgICAgIHRoaXMucGxheWVyID0gdmlkZW9qcyh0aGlzLiRyZWZzLnZpZGVvLCB2aWRlb09wdGlvbnMsIGZ1bmN0aW9uKCkgewoKICAgICAgICAvLyBldmVudHMKICAgICAgICBjb25zdCBldmVudHMgPSBERUZBVUxUX0VWRU5UUy5jb25jYXQoc2VsZi5ldmVudHMpLmNvbmNhdChzZWxmLmdsb2JhbEV2ZW50cykKCiAgICAgICAgLy8gd2F0Y2ggZXZlbnRzCiAgICAgICAgY29uc3Qgb25FZEV2ZW50cyA9IHt9CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh0eXBlb2YgZXZlbnRzW2ldID09PSAnc3RyaW5nJyAmJiBvbkVkRXZlbnRzW2V2ZW50c1tpXV0gPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAoZXZlbnQgPT4gewogICAgICAgICAgICAgIG9uRWRFdmVudHNbZXZlbnRdID0gbnVsbAogICAgICAgICAgICAgIHRoaXMub24oZXZlbnQsICgpID0+IHsKICAgICAgICAgICAgICAgIGVtaXRQbGF5ZXJTdGF0ZShldmVudCwgdHJ1ZSkKICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KShldmVudHNbaV0pCiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyB3YXRjaCB0aW1ldXBkYXRlCiAgICAgICAgdGhpcy5vbigndGltZXVwZGF0ZScsIGZ1bmN0aW9uKCkgewogICAgICAgICAgZW1pdFBsYXllclN0YXRlKCd0aW1ldXBkYXRlJywgdGhpcy5jdXJyZW50VGltZSgpKQogICAgICAgIH0pCgogICAgICAgIC8vIHBsYXllciByZWFkaWVkCiAgICAgICAgc2VsZi4kZW1pdCgncmVhZHknLCB0aGlzKQogICAgICB9KQogICAgfSwKICAgIGRpc3Bvc2UoY2FsbGJhY2spIHsKICAgICAgaWYgKHRoaXMucGxheWVyICYmIHRoaXMucGxheWVyLmRpc3Bvc2UpIHsKICAgICAgICBpZiAodGhpcy5wbGF5ZXIudGVjaE5hbWVfICE9PSAnRmxhc2gnKSB7CiAgICAgICAgICB0aGlzLnBsYXllci5wYXVzZSAmJiB0aGlzLnBsYXllci5wYXVzZSgpCiAgICAgICAgfQogICAgICAgIHRoaXMucGxheWVyLmRpc3Bvc2UoKQogICAgICAgIHRoaXMucGxheWVyID0gbnVsbAogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIHRoaXMucmVzZXRlZCA9IGZhbHNlCiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMucmVzZXRlZCA9IHRydWUKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCkKICAgICAgICAgICAgfSkKICAgICAgICAgIH0pCiAgICAgICAgfSkKICAgICAgICAvKgogICAgICAgIGlmICghdGhpcy4kZWwuY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgICAgICBjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJykKICAgICAgICAgIHZpZGVvLmNsYXNzTmFtZSA9ICd2aWRlby1qcycKICAgICAgICAgIHRoaXMuJGVsLmFwcGVuZENoaWxkKHZpZGVvKQogICAgICAgIH0KICAgICAgICAqLwogICAgICB9CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgb3B0aW9uczogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyKG9wdGlvbnMsIG9sZE9wdGlvbnMpIHsKICAgICAgICB0aGlzLmRpc3Bvc2UoKCkgPT4gewogICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5zb3VyY2VzICYmIG9wdGlvbnMuc291cmNlcy5sZW5ndGgpIHsKICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplKCkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["player.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"player.vue","sourceRoot":"node_modules/vue-video-player/src","sourcesContent":["<template>\n  <div class=\"video-player\" v-if=\"reseted\">\n    <video class=\"video-js\" ref=\"video\"></video>\n  </div>\n</template>\n\n<script>\n  // lib\n  import _videojs from 'video.js'\n  const videojs = window.videojs || _videojs\n\n  // pollfill\n  if (typeof Object.assign != 'function') {\n    Object.defineProperty(Object, 'assign', {\n      value(target, varArgs) {\n        if (target == null) {\n          throw new TypeError('Cannot convert undefined or null to object')\n        }\n        const to = Object(target)\n        for (let index = 1; index < arguments.length; index++) {\n          const nextSource = arguments[index]\n          if (nextSource != null) {\n            for (const nextKey in nextSource) {\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey]\n              }\n            }\n          }\n        }\n        return to\n      },\n      writable: true,\n      configurable: true\n    })\n  }\n\n  // as of videojs 6.6.0\n  const DEFAULT_EVENTS = [\n    'loadeddata',\n    'canplay',\n    'canplaythrough',\n    'play',\n    'pause',\n    'waiting',\n    'playing',\n    'ended',\n    'error'\n  ]\n\n  // export\n  export default {\n    name: 'video-player',\n    props: {\n      start: {\n        type: Number,\n        default: 0\n      },\n      crossOrigin: {\n        type: String,\n        default: ''\n      },\n      playsinline: {\n        type: Boolean,\n        default: false\n      },\n      customEventName: {\n        type: String,\n        default: 'statechanged'\n      },\n      options: {\n        type: Object,\n        required: true\n      },\n      events: {\n        type: Array,\n        default: () => []\n      },\n      globalOptions: {\n        type: Object,\n        default: () => ({\n          // autoplay: false,\n          controls: true,\n          // preload: 'auto',\n          // fluid: false,\n          // muted: false,\n          controlBar: {\n            remainingTimeDisplay: false,\n            playToggle: {},\n            progressControl: {},\n            fullscreenToggle: {},\n            volumeMenuButton: {\n              inline: false,\n              vertical: true\n            }\n          },\n          techOrder: ['html5'],\n          plugins: {}\n        })\n      },\n      globalEvents: {\n        type: Array,\n        default: () => []\n      }\n    },\n    data() {\n      return {\n        player: null,\n        reseted: true\n      }\n    },\n    mounted() {\n      if (!this.player) { \n        this.initialize()\n      }\n    },\n    beforeDestroy() {\n      if (this.player) { \n        this.dispose()\n      }\n    },\n    methods: {\n      initialize() {\n\n        // videojs options\n        const videoOptions = Object.assign({}, this.globalOptions, this.options)\n\n        // ios fullscreen\n        if (this.playsinline) {\n          this.$refs.video.setAttribute('playsinline', this.playsinline)\n          this.$refs.video.setAttribute('webkit-playsinline', this.playsinline)\n          this.$refs.video.setAttribute('x5-playsinline', this.playsinline)\n          this.$refs.video.setAttribute('x5-video-player-type', 'h5')\n          this.$refs.video.setAttribute('x5-video-player-fullscreen', false)\n        }\n\n        // cross origin\n        if (this.crossOrigin !== '') {\n          this.$refs.video.crossOrigin = this.crossOrigin\n          this.$refs.video.setAttribute('crossOrigin', this.crossOrigin)\n        }\n\n        // emit event\n        const emitPlayerState = (event, value) => {\n          if (event) {\n            this.$emit(event, this.player)\n          }\n          if (value) {\n            this.$emit(this.customEventName, { [event]: value })\n          }\n        }\n\n        // avoid error \"VIDEOJS: ERROR: Unable to find plugin: __ob__\"\n        if (videoOptions.plugins) {\n          delete videoOptions.plugins.__ob__\n        }\n\n        // videoOptions\n        // console.log('videoOptions', videoOptions)\n        \n        // player\n        const self = this\n        this.player = videojs(this.$refs.video, videoOptions, function() {\n\n          // events\n          const events = DEFAULT_EVENTS.concat(self.events).concat(self.globalEvents)\n\n          // watch events\n          const onEdEvents = {}\n          for (let i = 0; i < events.length; i++) {\n            if (typeof events[i] === 'string' && onEdEvents[events[i]] === undefined) {\n              (event => {\n                onEdEvents[event] = null\n                this.on(event, () => {\n                  emitPlayerState(event, true)\n                })\n              })(events[i])\n            }\n          }\n\n          // watch timeupdate\n          this.on('timeupdate', function() {\n            emitPlayerState('timeupdate', this.currentTime())\n          })\n\n          // player readied\n          self.$emit('ready', this)\n        })\n      },\n      dispose(callback) {\n        if (this.player && this.player.dispose) {\n          if (this.player.techName_ !== 'Flash') {\n            this.player.pause && this.player.pause()\n          }\n          this.player.dispose()\n          this.player = null\n          this.$nextTick(() => {\n            this.reseted = false\n            this.$nextTick(() => {\n              this.reseted = true\n              this.$nextTick(() => {\n                callback && callback()\n              })\n            })\n          })\n          /*\n          if (!this.$el.children.length) {\n            const video = document.createElement('video')\n            video.className = 'video-js'\n            this.$el.appendChild(video)\n          }\n          */\n        }\n      }\n    },\n    watch: {\n      options: {\n        deep: true,\n        handler(options, oldOptions) {\n          this.dispose(() => {\n            if (options && options.sources && options.sources.length) {\n              this.initialize()\n            }\n          })\n        }\n      }\n    }\n  }\n</script>\n"]}]}